@override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Stack(
          children: [
            Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: AssetImage('assets/images/bg.png'),
                  fit: BoxFit.cover,
                ),
              ),
            ),

            // Background Image

            Column(
              children: [
                const SizedBox(height: 50),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Builder(
                      builder: (context) => GestureDetector(
                        onTap: () {
                          Scaffold.of(context).openDrawer();
                        },
                        child: const Row(
                          children: [
                            Icon(
                              Icons.menu,
                              size: 30,
                              color: Colors.white,
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 10,
                    ),
                    GestureDetector(
                      onTap: () {
                        // Your action when the image is tapped
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => HomePage()),
                        );
                        // Add your logic here, such as navigating to a new screen or performing some action.
                      },
                      child: Image.asset(
                        'assets/logos/logo.png',
                        height: 26.87,
                        width: 218.25,
                      ),
                    )
                  ],
                ),
                const SizedBox(
                  height: 43.13,
                ),
                const Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 13.13,
                    ),
                    IconButton(
                      icon: Icon(Icons.arrow_back_ios),
                      onPressed: currentIndex > 0
                          ? () {
                              String siteId = siteNames[currentIndex - 1]
                                      ['siteId']
                                  .toString();
                              String sitename = siteNames[currentIndex - 1]
                                      ['siteName']
                                  .toString();
                              Navigator.pushReplacement(
                                context,
                                MaterialPageRoute(
                                  builder: (context) => DevelopmentScreen(
                                    i: currentIndex - 1,
                                    siteId: siteId,
                                    Sitename: sitename,
                                  ),
                                ),
                              );
                            }
                          : null,
                      iconSize: 21.13,
                      color: Colors.white,
                    ),
                    SizedBox(
                      width: 10,
                    ),
                    SizedBox(
                        width: MediaQuery.of(context).size.width * 0.6,
                        height: MediaQuery.of(context).size.height * 0.03,
                        child: Center(
                            child: Text(
                          widget.Sitename,
                          overflow: TextOverflow.ellipsis,
                          style: TextStyle(
                            fontSize: 16,
                            color: Colors.white,
                          ),
                        ))),
                    SizedBox(
                      width: 10,
                    ),
                    IconButton(
                      icon: const Icon(Icons.arrow_forward_ios),
                      onPressed: currentIndex < siteNames.length - 1
                          ? () {
                              String siteId = siteNames[currentIndex + 1]
                                      ['siteId']
                                  .toString();
                              String sitename = siteNames[currentIndex + 1]
                                      ['siteName']
                                  .toString();
                              Navigator.pushReplacement(
                                context,
                                MaterialPageRoute(
                                  builder: (context) => DevelopmentScreen(
                                    i: currentIndex + 1,
                                    siteId: siteId,
                                    Sitename: sitename,
                                  ),
                                ),
                              );
                            }
                          : null,
                      iconSize: 21.13,
                      color: Colors.white,
                    ),
                  ],
                ),
                Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
                SizedBox(
                  height: 32,
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 70,
                    ),
                    TextButton(
                      onPressed: () => onButtonPressed(0),
                      child: const Text(
                        'ANALYTICS',
                        style: TextStyle(
                          color: Colors.white, // Set the text color to black
                        ),
                      ),
                    ),
                    SizedBox(
                      width: 65,
                    ),
                    TextButton(
                      onPressed: () => onButtonPressed(1),
                      child: const Text(
                        'REPORTS',
                        style: TextStyle(
                          color: Colors.white, // Set the text color to black
                        ),
                      ),
                    ),
                  ],
                ),
                SizedBox(
                  height: 12,
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 30.5,
                    ),
                    Divider(
                      height: 1, // Set the height of the line
                      thickness: 1, // Set the thickness of the line
                      color: Colors.white, // Set the color of the line
                    ),
                  ],
                )
              ],
            ),

            if (selectedButtonIndex == 0) ...[
              // Display content for Button 1
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 30.5,
                right: 179.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),

              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 50,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: EdgeInsets.only(left: 10, top: 0),
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Expanded(
                                child: Padding(
                                  padding: EdgeInsets.only(left: 10),
                                  child: TextField(
                                    controller: dateController,
                                    decoration: InputDecoration(
                                      hintText: 'yyyy-mm-dd',
                                      border: InputBorder.none,
                                    ),
                                  ),
                                ),
                              ),
                              IconButton(
                                onPressed: () {
                                  showDatePicker(
                                    context: context,
                                    initialDate: DateTime.now(),
                                    firstDate: DateTime(2000),
                                    lastDate: DateTime(2030),
                                  ).then((selectedDate) {
                                    if (selectedDate != null) {
                                      setState(() {
                                        this.selectedDate = selectedDate;
                                        dateController.text = selectedDate
                                            .toString()
                                            .split(' ')[0];
                                      });
                                    }
                                  });
                                },
                                icon: Icon(Icons.calendar_today),
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      const Divider(),
                      Expanded(
                        child: SingleChildScrollView(
                          child: FutureBuilder(
                            future: fetchData(selectedDate, int.parse(siteId)),
                            builder: (context, snapshot) {
                              if (snapshot.connectionState ==
                                      ConnectionState.done &&
                                  !snapshot.hasError) {
                                if (snapshot.data != null &&
                                    snapshot.data!['AnalyticsList'] != null) {
                                  return SingleChildScrollView(
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        YourWidget(
                                          analyticsList:
                                              (snapshot.data!['AnalyticsList']
                                                      as List<dynamic>)
                                                  .cast<Map<String, dynamic>>(),
                                        ),
                                      ],
                                    ),
                                  );
                                } else {
                                  return Center(
                                    child: Text('No data available'),
                                  );
                                }
                              } else {
                                return Center(
                                  child: CircularProgressIndicator(),
                                );
                              }
                            },
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),

              // Add rows and columns specific to Button 1
            ] else if (selectedButtonIndex == 1) ...[
              // Display content for Button 2
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 180.5,
                right: 29.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 250,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Stack(
                          children: [
                            Column(
                              children: [
                                SizedBox(
                                  height: 30,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 35,
                                    ),
                                    Text(
                                      'BUSINESS INTELLIGENCE REPORT',
                                      style: TextStyle(
                                          fontWeight: FontWeight.bold,
                                          fontSize:
                                              13 // Set the text color to black
                                          ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 15,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 23,
                                    ),
                                    // From Date
                                    Container(
                                      width: 110,
                                      height: 35,
                                      decoration: BoxDecoration(
                                        color: Colors.white.withOpacity(1),
                                        borderRadius: BorderRadius.circular(5),
                                        border: Border.all(
                                          color: Colors.grey,
                                          width: 1,
                                        ),
                                      ),
                                      child: Padding(
                                        padding:
                                            EdgeInsets.only(left: 0, top: 0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Expanded(
                                              child: Padding(
                                                padding: EdgeInsets.only(
                                                    left: 0, top: 0),
                                                child: TextField(
                                                  style:
                                                      TextStyle(fontSize: 11),
                                                  controller:
                                                      fromDateController,
                                                  decoration: InputDecoration(
                                                    hintText: 'From Date',
                                                    border: InputBorder.none,
                                                  ),
                                                ),
                                              ),
                                            ),
                                            IconButton(
                                              onPressed: () {
                                                showDatePicker(
                                                  context: context,
                                                  initialDate: DateTime.now(),
                                                  firstDate: DateTime(2000),
                                                  lastDate: DateTime.now(),
                                                ).then((FromDate) {
                                                  if (FromDate != null) {
                                                    setState(() {
                                                      this.FromDate = FromDate;
                                                      fromDateController.text =
                                                          FromDate.toString()
                                                              .split(' ')[0];
                                                    });
                                                  }
                                                });
                                              },
                                              icon: Icon(
                                                Icons.calendar_today,
                                                size: 14.09,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                    SizedBox(
                                      width: 44,
                                    ),
                                    // To Date
                                    Container(
                                      width: 110,
                                      height: 35,
                                      decoration: BoxDecoration(
                                        color: Colors.white.withOpacity(1),
                                        borderRadius: BorderRadius.circular(5),
                                        border: Border.all(
                                          color: Colors.grey,
                                          width: 1,
                                        ),
                                      ),
                                      child: Padding(
                                        padding:
                                            EdgeInsets.only(left: 0, top: 0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          children: [
                                            Expanded(
                                              child: TextField(
                                                style: TextStyle(fontSize: 11),
                                                controller: toDateController,
                                                decoration: InputDecoration(
                                                  hintText: 'To Date',
                                                  border: InputBorder.none,
                                                ),
                                              ),
                                            ),
                                            IconButton(
                                              onPressed: () {
                                                showDatePicker(
                                                  context: context,
                                                  initialDate: DateTime.now(),
                                                  firstDate: DateTime(2000),
                                                  lastDate: DateTime.now(),
                                                ).then((ToDate) {
                                                  if (ToDate != null) {
                                                    setState(() {
                                                      this.ToDate = ToDate;
                                                      toDateController.text =
                                                          ToDate.toString()
                                                              .split(' ')[0];
                                                    });
                                                  }
                                                });
                                              },
                                              icon: Icon(
                                                Icons.calendar_today,
                                                size: 14.09,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 34,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 100,
                                    ),
                                    TextButton(
                                      onPressed: () {},
                                      style: ButtonStyle(
                                        shape: MaterialStateProperty.all<
                                            RoundedRectangleBorder>(
                                          RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25.0),
                                            side: BorderSide(
                                                color: Colors.blue,
                                                width:
                                                    2.0), // Adjust the radius as needed
                                          ),
                                        ),
                                        minimumSize: MaterialStateProperty.all(
                                            const Size(
                                                100, 35)), // Set the size here
                                      ),
                                      child: const Text('Email'),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 10,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 100,
                                    ),
                                    ElevatedButton(
                                      onPressed: () {
                                        _callApi(FromDate, ToDate);
                                      },
                                      style: ButtonStyle(
                                        shape: MaterialStateProperty.all<
                                            RoundedRectangleBorder>(
                                          RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25.0),
                                            // Adjust the radius as needed
                                          ),
                                        ),
                                        minimumSize: MaterialStateProperty.all(
                                            const Size(
                                                100, 35)), // Set the size here
                                      ),
                                      child: const Text('Download'),
                                    ),
                                  ],
                                ),
                              ],
                            ),
                            Positioned(
                              top: 69,
                              left: 150,
                              child: Text("-"),
                            )
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ],
            SizedBox(
              height: 20,
            ),
            // Your API Data Display (adjust as needed)
          ],
        ),
        bottomNavigationBar: CustomBottomNavigationBar(
          siteId: siteId,
          Sitename: sitename,
          i: currentIndex,
        ),
        drawer: Drawer(
          child: Column(
            children: [
              Container(
                color: const Color.fromARGB(
                    255, 120, 63, 59), // Background color for the custom header
                height: 230, // Height of the custom header
                child: const Stack(
                  children: [
                    // Positioned user avatar
                    Positioned(
                      top: 20,
                      left: 20,
                      child: CircleAvatar(
                        backgroundColor: Colors.white,
                        child: Icon(
                          Icons.person,
                          color: Colors.blue,
                          size: 50,
                        ),
                      ),
                    ),
                    // Positioned account name
                    Positioned(
                      top: 44,
                      left: 100,
                      right: 73,
                      child: Text(
                        "NAME              +91XXXXXXXXXX name@email.com",
                        style: TextStyle(
                          fontSize: 11,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 108,
                      left: 100,
                      right: 86,
                      child: Text(
                        "Address Line 1 Address Line 2 District/City State, Country Pincode",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 207,
                      left: 100,
                      child: Text(
                        "+91 1234512345",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    // Positioned account email
                  ],
                ),
              ),
              //
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("RESET PASSWORD"),
                onTap: () {
                  // Handle home item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ResetScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("CONTACT"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ContactScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                minLeadingWidth: 25,
                title: const Text("TERMS & CONDITIONS"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.pop(context); // Close the drawer
                },
              ),
            ],
          ),
        ),
      ),
    );
  }


*******************************************************************************************************************************************
Positioned(
              right: 29.87, // Adjust the position from the right
              top: 125, // Center vertically
              child: IconButton(
                icon: const Icon(Icons.arrow_forward_ios),
                onPressed: currentIndex < siteNames.length - 1
                    ? () {
                        print('Current Index: $currentIndex');
                        if (currentIndex + 1 < siteNames.length) {
                          String siteId =
                              siteNames[currentIndex + 1]['siteId'].toString();
                          String sitename = siteNames[currentIndex + 1]
                                  ['siteName']
                              .toString();
                          print('Next Site ID: $siteId');
                          print('Next Site Name: $sitename');
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => OneStopScreen(
                                i: currentIndex + 1,
                                siteId: siteId,
                                Sitename: sitename,
                              ),
                            ),
                          );
                        } else {
                          print('Index out of bounds.');
                        }
                      }
                    : null,
                iconSize: 21.13,
                color: Colors.white,
              ),
            ),
            Positioned(
              left: 29.87, // Adjust the position from the right
              top: 125, // Center vertically
              child: IconButton(
                icon: const Icon(Icons.arrow_back_ios),
                onPressed: () {
                  onPressed:
                  currentIndex > 0
                      ? () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => OneStopScreen(
                                i: currentIndex - 1,
                                siteId: siteNames[currentIndex - 1]['siteId']
                                    .toString(),
                                Sitename: siteNames[currentIndex - 1]
                                        ['siteName']
                                    .toString(),
                              ),
                            ),
                          );
                        }
                      : null;

                  // Handle right arrow button press
                },

                iconSize: 21.13, // Adjust the size of the button
                color: Colors.white, // Adjust the color of the button
              ),
            ),
**********************************************************************
const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 180.5,
                right: 29.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: EdgeInsets.only(
                              top: 0, left: 0), // Adjust the left padding
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              SizedBox(
                                height: 30,
                              ),
                              Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Column(
                                    children: [
                                      Container(
                                        width: 260,
                                        height: 90,
                                        decoration: ShapeDecoration(
                                          color: Colors.white,
                                          shape: RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(10),
                                            side: BorderSide(
                                              color:
                                                  Colors.grey, // Border color
                                              width: 2.0, // Border width
                                            ),
                                          ),
                                        ),
                                        child: Padding(
                                          padding: EdgeInsets.only(
                                              top: 0,
                                              left:
                                                  0), // Adjust the left padding
                                          child: Stack(
                                            children: [
                                              Positioned(
                                                top: 0,
                                                left: 0,
                                                child: Container(
                                                  width: 260,
                                                  height: 38,
                                                  color: Color.fromARGB(
                                                      255, 220, 222, 222),
                                                  // Replace with the desired color
                                                  child: Stack(
                                                    children: [
                                                      SizedBox(
                                                        height: 10,
                                                      ),
                                                      Positioned(
                                                        top: 10,
                                                        left: 13,
                                                        child: Text(
                                                          "id",
                                                          style:
                                                              const TextStyle(
                                                            fontSize: 13,
                                                            color: Colors.black,
                                                          ),
                                                        ),
                                                      ),
                                                      Positioned(
                                                        top: 10,
                                                        left: 170,
                                                        child: Text(
                                                          'status',
                                                          style:
                                                              const TextStyle(
                                                            fontSize: 13,
                                                            color: Colors.black,
                                                          ),
                                                        ),
                                                      ),
                                                      Positioned(
                                                        top: 10,
                                                        left: 235,
                                                        child: Icon(
                                                          Icons
                                                              .chevron_right, // Replace with the desired icon
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                              Positioned(
                                                top: 44,
                                                left: 13,
                                                child: Text(
                                                  'heat maps',
                                                  style: const TextStyle(
                                                    fontSize: 15,
                                                    color: Colors.black,
                                                    fontWeight: FontWeight.bold,
                                                  ),
                                                ),
                                              ),
                                              Positioned(
                                                top: 44,
                                                left: 188,
                                                child: Text(
                                                  'date',
                                                  style: const TextStyle(
                                                    fontSize: 13,
                                                    color: Colors.grey,
                                                  ),
                                                ),
                                              ),
                                              Positioned(
                                                top: 63,
                                                left: 13,
                                                child: Text(
                                                  'description',
                                                  style: const TextStyle(
                                                    fontSize: 13,
                                                    color: Colors.black,
                                                  ),
                                                ),
                                              ),
                                              Positioned(
                                                top: 63,
                                                left: 180,
                                                child: Icon(
                                                  Icons
                                                      .edit_rounded, // Replace with the desired icon
                                                  size: 20,
                                                  color: Colors.blue,
                                                ),
                                              ),
                                              Positioned(
                                                top: 63,
                                                left: 203,
                                                child: Icon(
                                                  Icons
                                                      .preview_rounded, // Replace with the desired icon
                                                  size: 20,
                                                  color: Colors.blue,
                                                ),
                                              ),
                                              Positioned(
                                                top: 63,
                                                left: 230,
                                                child: Icon(
                                                  Icons
                                                      .delete, // Replace with the desired icon
                                                  size: 20,
                                                  color: Colors.red,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
************************************************************************
Container(
                        width: 260,
                        height: 90,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: const Column(
                          children: [
                            SizedBox(
                              height: 10,
                            ),
                            Row(
                              children: [
                                SizedBox(
                                  width: 13,
                                ),
                                //Text("IDxxxxx", style: TextStyle(fontSize: 14)),
                                SizedBox(
                                  width: 90,
                                ),
                                Text("status", style: TextStyle(fontSize: 14)),
                              ],
                            ),
                            SizedBox(
                              height: 19,
                            ),
                            Row(
                              children: [
                                SizedBox(
                                  width: 13,
                                ),
                                Text("heat maps", style: TextStyle(fontSize: 14)),
                                SizedBox(width: 100,),
                                Text("time", style: TextStyle(fontSize: 14)),
                              ],
                            ),
                            SizedBox(height: 3,),
                            Row(children: [SizedBox(width: 13,),
                            Text("Descreption", style: TextStyle(fontSize: 14)),
                            ],)

                          ],
                        ),
                      ),
************************************************************************
import 'package:flutter/material.dart';
import 'package:ivis_security/alarm.dart';
import 'package:ivis_security/cctv.dart';
import 'package:ivis_security/center.dart';
import 'package:ivis_security/hdtv.dart';
import 'package:ivis_security/contact.dart';
import 'package:ivis_security/reset.dart';
import 'package:http/http.dart' as http;
import 'package:path_provider/path_provider.dart';
import 'dart:io';
import 'package:ivis_security/home.dart';
import 'package:ivis_security/apis/analytics.dart';
import 'dart:convert';

import 'package:intl/intl.dart';

// Import your API service file

void main() async {
  runApp(DevelopmentScreen());
}

class DevelopmentScreen extends StatefulWidget {
  const DevelopmentScreen({super.key});

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<DevelopmentScreen> {
  // Track the selected button
  DateTime selectedDate = DateTime.now();
  DateTime FromDate = DateTime.now();
  DateTime ToDate = DateTime.now();
  int siteId = 1002;
  TextEditingController dateController = TextEditingController();
  TextEditingController fromDateController = TextEditingController();
  TextEditingController toDateController = TextEditingController();
  DateTime selectedFromDate = DateTime.now();
  DateTime selectedToDate = DateTime.now();
  DateTime? _selectedDay;
  List<String> disabledDates = [];

  @override
  void initState() {
    super.initState();
    fromDateController = TextEditingController();
    toDateController = TextEditingController();

    dateController = TextEditingController();
    selectedDate = DateTime.now();

    // selected date
    fetchLastWorkday(siteId).then((lastWorkday) {
      setState(() {
        // Use _lastWorkday if _selectedDay is null
        selectedDate = _selectedDay ?? lastWorkday;
        dateController.text = selectedDate.toString().split(' ')[0];
      });
    });

    // Initialize selectedFromDate and selectedToDate here
    fetchNotWorkingDates().then((dates) {
      setState(() {
        disabledDates = dates;
      });
    });
  }

  int selectedButtonIndex = 0; // Track the selected button

  void onButtonPressed(int index) {
    setState(() {
      selectedButtonIndex = index; // Update the selected button index
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Stack(
          children: [
            Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: AssetImage('assets/images/bg.png'),
                  fit: BoxFit.cover,
                ),
              ),
            ),

            // Background Image

            Column(
              children: [
                const SizedBox(height: 50),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Builder(
                      builder: (context) => GestureDetector(
                        onTap: () {
                          Scaffold.of(context).openDrawer();
                        },
                        child: const Row(
                          children: [
                            Icon(
                              Icons.menu,
                              size: 30,
                              color: Colors.white,
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 10,
                    ),
                    GestureDetector(
                      onTap: () {
                        // Your action when the image is tapped
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => HomePage()),
                        );
                        // Add your logic here, such as navigating to a new screen or performing some action.
                      },
                      child: Image.asset(
                        'assets/logos/logo.png',
                        height: 26.87,
                        width: 218.25,
                      ),
                    )
                  ],
                ),
                const SizedBox(
                  height: 43.13,
                ),
                const Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 13.13,
                    ),
                    IconButton(
                      icon: const Icon(Icons.arrow_back),

                      onPressed: () {
                        // Handle right arrow button press
                      },
                      iconSize: 40, // Adjust the size of the button
                      color: Colors.white, // Adjust the color of the button
                    ),
                    SizedBox(
                      width: 40,
                    ),
                    Text(
                      'ONE STOP ODESSA',
                      style: TextStyle(
                        fontSize: 16,
                        color: Colors.white,
                      ),
                    ),
                    SizedBox(
                      width: 50,
                    ),
                    IconButton(
                      icon: const Icon(Icons.arrow_forward),
                      onPressed: () {
                        // Handle right arrow button press
                      },
                      iconSize: 40, // Adjust the size of the button
                      color: Colors.white, // Adjust the color of the button
                    ),
                  ],
                ),
                Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
                SizedBox(
                  height: 32,
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 70,
                    ),
                    TextButton(
                      onPressed: () => onButtonPressed(0),
                      child: const Text(
                        'ANALYTICS',
                        style: TextStyle(
                          color: Colors.white, // Set the text color to black
                        ),
                      ),
                    ),
                    SizedBox(
                      width: 65,
                    ),
                    TextButton(
                      onPressed: () => onButtonPressed(1),
                      child: const Text(
                        'REPORTS',
                        style: TextStyle(
                          color: Colors.white, // Set the text color to black
                        ),
                      ),
                    ),
                  ],
                ),
                SizedBox(
                  height: 12,
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 30.5,
                    ),
                    Divider(
                      height: 1, // Set the height of the line
                      thickness: 1, // Set the thickness of the line
                      color: Colors.white, // Set the color of the line
                    ),
                  ],
                )
              ],
            ),

            if (selectedButtonIndex == 0) ...[
              // Display content for Button 1
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 30.5,
                right: 179.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),

              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 50,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: EdgeInsets.only(left: 10, top: 0),
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Expanded(
                                child: Padding(
                                  padding: EdgeInsets.only(left: 10),
                                  child: TextField(
                                    controller: dateController,
                                    decoration: InputDecoration(
                                      hintText: 'yyyy-mm-dd',
                                      border: InputBorder.none,
                                    ),
                                  ),
                                ),
                              ),
                              IconButton(
                                onPressed: () => _selectDate(context),
                                icon: Icon(Icons.calendar_today),
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      const Divider(),
                      Expanded(
                        child: SingleChildScrollView(
                          child: FutureBuilder(
                            future: fetchData(selectedDate, siteId),
                            builder: (context, snapshot) {
                              if (snapshot.connectionState ==
                                      ConnectionState.done &&
                                  !snapshot.hasError) {
                                if (snapshot.data != null &&
                                    snapshot.data!['AnalyticsList'] != null) {
                                  return SingleChildScrollView(
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        YourWidget(
                                          analyticsList:
                                              (snapshot.data!['AnalyticsList']
                                                      as List<dynamic>)
                                                  .cast<Map<String, dynamic>>(),
                                        ),
                                      ],
                                    ),
                                  );
                                } else {
                                  return Center(
                                    child: Text('No data available'),
                                  );
                                }
                              } else {
                                return Center(
                                  child: CircularProgressIndicator(),
                                );
                              }
                            },
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),

              // Add rows and columns specific to Button 1
            ] else if (selectedButtonIndex == 1) ...[
              // Display content for Button 2
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 180.5,
                right: 29.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 250,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Stack(
                          children: [
                            Column(
                              children: [
                                SizedBox(
                                  height: 30,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 35,
                                    ),
                                    Text(
                                      'BUSINESS INTELLIGENCE REPORT',
                                      style: TextStyle(
                                          fontWeight: FontWeight.bold,
                                          fontSize:
                                              13 // Set the text color to black
                                          ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 15,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 23,
                                    ),
                                    // From Date
                                    Container(
                                      width: 110,
                                      height: 35,
                                      decoration: BoxDecoration(
                                        color: Colors.white.withOpacity(1),
                                        borderRadius: BorderRadius.circular(5),
                                        border: Border.all(
                                          color: Colors.grey,
                                          width: 1,
                                        ),
                                      ),
                                      child: Padding(
                                        padding:
                                            EdgeInsets.only(left: 0, top: 0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Expanded(
                                              child: Padding(
                                                padding: EdgeInsets.only(
                                                    left: 0, top: 0),
                                                child: TextField(
                                                  style:
                                                      TextStyle(fontSize: 11),
                                                  controller:
                                                      fromDateController,
                                                  decoration: InputDecoration(
                                                    hintText: 'From Date',
                                                    border: InputBorder.none,
                                                  ),
                                                ),
                                              ),
                                            ),
                                            IconButton(
                                              onPressed: () {
                                                showDatePicker(
                                                  context: context,
                                                  initialDate: DateTime.now(),
                                                  firstDate: DateTime(2000),
                                                  lastDate: DateTime.now(),
                                                ).then((FromDate) {
                                                  if (FromDate != null) {
                                                    setState(() {
                                                      this.FromDate = FromDate;
                                                      fromDateController.text =
                                                          FromDate.toString()
                                                              .split(' ')[0];
                                                    });
                                                  }
                                                });
                                              },
                                              icon: Icon(
                                                Icons.calendar_today,
                                                size: 14.09,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                    SizedBox(
                                      width: 44,
                                    ),
                                    // To Date
                                    Container(
                                      width: 110,
                                      height: 35,
                                      decoration: BoxDecoration(
                                        color: Colors.white.withOpacity(1),
                                        borderRadius: BorderRadius.circular(5),
                                        border: Border.all(
                                          color: Colors.grey,
                                          width: 1,
                                        ),
                                      ),
                                      child: Padding(
                                        padding:
                                            EdgeInsets.only(left: 0, top: 0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          children: [
                                            Expanded(
                                              child: TextField(
                                                style: TextStyle(fontSize: 11),
                                                controller: toDateController,
                                                decoration: InputDecoration(
                                                  hintText: 'To Date',
                                                  border: InputBorder.none,
                                                ),
                                              ),
                                            ),
                                            IconButton(
                                              onPressed: () {
                                                showDatePicker(
                                                  context: context,
                                                  initialDate: DateTime.now(),
                                                  firstDate: DateTime(2000),
                                                  lastDate: DateTime.now(),
                                                ).then((ToDate) {
                                                  if (ToDate != null) {
                                                    setState(() {
                                                      this.ToDate = ToDate;
                                                      toDateController.text =
                                                          ToDate.toString()
                                                              .split(' ')[0];
                                                    });
                                                  }
                                                });
                                              },
                                              icon: Icon(
                                                Icons.calendar_today,
                                                size: 14.09,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 34,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 100,
                                    ),
                                    TextButton(
                                      onPressed: () {},
                                      style: ButtonStyle(
                                        shape: MaterialStateProperty.all<
                                            RoundedRectangleBorder>(
                                          RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25.0),
                                            side: BorderSide(
                                                color: Colors.blue,
                                                width:
                                                    2.0), // Adjust the radius as needed
                                          ),
                                        ),
                                        minimumSize: MaterialStateProperty.all(
                                            const Size(
                                                100, 35)), // Set the size here
                                      ),
                                      child: const Text('Email'),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 10,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 100,
                                    ),
                                    ElevatedButton(
                                      onPressed: () {
                                        _callApi(FromDate, ToDate);
                                      },
                                      style: ButtonStyle(
                                        shape: MaterialStateProperty.all<
                                            RoundedRectangleBorder>(
                                          RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25.0),
                                            // Adjust the radius as needed
                                          ),
                                        ),
                                        minimumSize: MaterialStateProperty.all(
                                            const Size(
                                                100, 35)), // Set the size here
                                      ),
                                      child: const Text('Download'),
                                    ),
                                  ],
                                ),
                              ],
                            ),
                            Positioned(
                              top: 69,
                              left: 150,
                              child: Text("-"),
                            )
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ],
            SizedBox(
              height: 20,
            ),
            // Your API Data Display (adjust as needed)
          ],
        ),
        bottomNavigationBar: BottomAppBar(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: [
              IconButton(
                icon: Image.asset(
                  'assets/logos/bx-cctv.png',
                  width: 19.93, // Adjust image width as needed
                  height: 19.67,
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CctvScreen()),
                  );
                  // Handle home button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/alarm.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const AlarmScreen()),
                  ); // Handle settings button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/development.jpg', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  // Handle settings button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/center-circle.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CenterScreen()),
                  );
                  // Handle search button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/hdtv.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => HdtvScreen()),
                  );
                  // Handle search button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/plus-square.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CenterScreen()),
                  );
                  // Handle search button press
                },
              ),
            ],
          ),
        ),
        drawer: Drawer(
          child: Column(
            children: [
              Container(
                color: const Color.fromARGB(
                    255, 120, 63, 59), // Background color for the custom header
                height: 230, // Height of the custom header
                child: const Stack(
                  children: [
                    // Positioned user avatar
                    Positioned(
                      top: 20,
                      left: 20,
                      child: CircleAvatar(
                        backgroundColor: Colors.white,
                        child: Icon(
                          Icons.person,
                          color: Colors.blue,
                          size: 50,
                        ),
                      ),
                    ),
                    // Positioned account name
                    Positioned(
                      top: 44,
                      left: 100,
                      right: 73,
                      child: Text(
                        "NAME              +91XXXXXXXXXX name@email.com",
                        style: TextStyle(
                          fontSize: 11,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 108,
                      left: 100,
                      right: 86,
                      child: Text(
                        "Address Line 1 Address Line 2 District/City State, Country Pincode",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 207,
                      left: 100,
                      child: Text(
                        "+91 1234512345",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    // Positioned account email
                  ],
                ),
              ),
              //
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("RESET PASSWORD"),
                onTap: () {
                  // Handle home item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ResetScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("CONTACT"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ContactScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                minLeadingWidth: 25,
                title: const Text("TERMS & CONDITIONS"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.pop(context); // Close the drawer
                },
              ),
            ],
          ),
        ),
      ),
    );
  }

  //disable not working dates
  Future<void> _selectDate(BuildContext context) async {
    final DateTime? pickedDate = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(2000),
      lastDate: DateTime.now(),
      selectableDayPredicate: (DateTime date) {
        // Convert date to 'yyyy-MM-dd' format for comparison
        String formattedDate =
            '${date.year}-${date.month.toString().padLeft(2, '0')}-${date.day.toString().padLeft(2, '0')}';

        // Disable dates that are in the disabledDates list
        return !disabledDates.contains(formattedDate);
      },
    );

    if (pickedDate != null && pickedDate != _selectedDay) {
      setState(() {
        _selectedDay = pickedDate;
      });
    }
  }

  Future<List<String>> fetchNotWorkingDates() async {
    const apiUrl =
        "http://usmgmt.iviscloud.net:777/businessInterface/Client/notWorkingDays_1_0?siteId=1002&calling_System_Detail=IVISUSA&year=2022";

    try {
      final response = await http.get(Uri.parse(apiUrl));

      if (response.statusCode == 200) {
        final Map<String, dynamic> data = json.decode(response.body);
        if (data['NotWorkingDaysList'] != null) {
          List<String> notWorkingDates =
              List<String>.from(data['NotWorkingDaysList']);
          return notWorkingDates;
        } else {
          return [];
        }
      } else {
        return [];
      }
    } catch (e) {
      return [];
    }
  }

//date data
  // Add an async function to fetch the last workday from the API
  Future<DateTime> fetchLastWorkday(siteId) async {
    final apiUrl =
        "http://usmgmt.iviscloud.net:777/businessInterface/Client/notWorkingDays_1_0?siteId=$siteId&calling_System_Detail=IVISUSA&year=2021";

    // Make the HTTP request
    final response = await http.get(Uri.parse(apiUrl));

    if (response.statusCode == 200) {
      final Map<String, dynamic> data = json.decode(response.body);
      // Assuming the API response has a field 'lastWorkday'
      final String lastWorkdayString = data['LastWorkingDay'];
      // Parse the date from the string
      final DateTime lastWorkday = DateTime.parse(lastWorkdayString);
      return lastWorkday;
    } else {
      // Handle error when the API request fails
      throw Exception('Failed to load last workday');
    }
  }

// Modify your initState to use the async function

// Rest of your code remains the same...

  Future<void> downloadPdf(FromDate, ToDate) async {
    // Replace 'YOUR_PDF_API_URL' with your actual API endpoint
    final pdfApiUrl =
        'http://usmgmt.iviscloud.net:777/businessInterface/insights/getPdfReport?siteId=1003&startdate=$ToDate&enddate=$ToDate&calling_System_Detail=IVISUSA';

    try {
      final response = await http.get(Uri.parse(pdfApiUrl));

      if (response.statusCode == 200) {
        final documentDirectory = await getApplicationDocumentsDirectory();
        final file = File('${documentDirectory.path}/downloaded_file.pdf');

        await file.writeAsBytes(response.bodyBytes);

        print('PDF downloaded and saved to: ${file.path}');
      } else {
        throw Exception('Failed to download PDF');
      }
    } catch (e) {
      print('Error downloading PDF: $e');
    }
  }
}

Future<void> _callApi(DateTime FromDate, DateTime ToDate) async {
  final String fromDate = DateFormat('yyyy/MM/dd').format(FromDate);
  final String toDate = DateFormat('yyyy/MM/dd').format(ToDate);

  final apiUrl =
      "http://usmgmt.iviscloud.net:777/businessInterface/insights/getPdfReport?siteId=1003&startdate=$fromDate&enddate=$toDate&calling_System_Detail=IVISUSA";

  try {
    final response = await http.get(Uri.parse(apiUrl));

    if (response.statusCode == 200) {
      // Handle the API response as needed
      print("API Call Successful");
    } else {
      // Handle errors or different status codes
      print("API Call Failed. Status code: ${response.statusCode}");
    }
  } catch (e) {
    // Handle exceptions or network errors
    print("Error during API call: $e");
  }
}

@override
class YourWidget extends StatelessWidget {
  final List<Map<String, dynamic>> analyticsList;

  YourWidget({required this.analyticsList});
  Color getColorBasedOnCriteria(String type) {
    // Your logic to determine the color based on the 'type'
    // For example, let's say if type is 'A' use red, if 'B' use green, else use yellow
    if (type == 'Raise') {
      return Colors.green.withOpacity(1);
    } else if (type == 'Fall') {
      return Colors.red.withOpacity(1);
    } else {
      return Colors.yellow.withOpacity(1);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        SizedBox(height: 10),

        // Create a list of Container widgets for each item in analyticsList
        for (var analytics in analyticsList) ...[
          SizedBox(
            height: 10,
          ),

          // ignore: unnecessary_null_comparison
          if (analytics != null && analytics['service'] is String)
            SingleChildScrollView(
              child: Container(
                width: 300,
                height: 100,
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(1),
                  borderRadius: BorderRadius.circular(5),
                ),
                child: Padding(
                    padding: EdgeInsets.only(
                        top: 0, left: 0), // Adjust the left padding
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      children: [
                        SizedBox(
                          height: 14,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Text(
                              '${analytics['service']}',
                              style: const TextStyle(
                                fontSize: 13,
                                color: Colors.black,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Column(
                              children: [
                                SizedBox(
                                  height: 4,
                                ),
                                Text(
                                  '(Compare with prior period)',
                                  style: const TextStyle(
                                    fontSize: 9,
                                    color: Colors.grey,
                                  ),
                                )
                              ],
                            ),
                          ],
                        ),
                        SizedBox(
                          height: 8,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][0]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        '${analytics['analytics'][0]['type']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][0]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        '${analytics['analytics'][0]['count']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][1]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 5,
                                      ),
                                      Text(
                                        '${analytics['analytics'][1]['type']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][1]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${analytics['analytics'][1]['count']}",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][3]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        'QTR',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][3]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${analytics['analytics'][3]['count']}",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ],
                    )),
              ),
            ),
          // Add more widgets or modify the Container as needed
        ],
      ],
    );
  }
}
*************************************************************************
import 'package:flutter/material.dart';

import 'dart:convert';

import 'package:ivis_security/alarm.dart';
import 'package:ivis_security/cctv.dart';
import 'package:ivis_security/center.dart';
import 'package:ivis_security/hdtv.dart';
import 'package:ivis_security/contact.dart';
import 'package:ivis_security/reset.dart';
import 'package:http/http.dart' as http;
import 'package:path_provider/path_provider.dart';
import 'dart:io';
import 'package:ivis_security/home.dart';
import 'package:ivis_security/apis/analytics.dart';

// Import your API service file

void main() async {
  runApp(DevelopmentScreen());
}

class DevelopmentScreen extends StatefulWidget {
  const DevelopmentScreen({super.key});

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<DevelopmentScreen> {
  // Track the selected button
  DateTime selectedDate = DateTime.now();
  DateTime FromDate = DateTime.now();
  DateTime ToDate = DateTime.now();

  TextEditingController dateController = TextEditingController();

  @override
  void initState() {
    super.initState();
    dateController = TextEditingController();
    
    FromDate = DateTime.now();
    ToDate = DateTime.now();
    // Initialize selectedDate here
    fetchLastWorkday().then((lastWorkday) {
      setState(() {
        // Use _lastWorkday if _selectedDay is null
        selectedDate = lastWorkday ?? selectedDate;
        dateController.text = selectedDate.toString().split(' ')[0];
      });
    });

  }
  

  Future<DateTime> fetchLastWorkday() async {
    final apiUrl =
        "http://usmgmt.iviscloud.net:777/businessInterface/Client/notWorkingDays_1_0?siteId=1002&calling_System_Detail=IVISUSA&year=2021";

    // Make the HTTP request
    final response = await http.get(Uri.parse(apiUrl));

    if (response.statusCode == 200) {
      final Map<String, dynamic> data = json.decode(response.body);
      // Assuming the API response has a field 'lastWorkday'
      final String lastWorkdayString = data['LastWorkingDay'];
      // Parse the date from the string
      final DateTime lastWorkday = DateTime.parse(lastWorkdayString);
      return lastWorkday;
    } else {
      // Handle error when the API request fails
      throw Exception('Failed to load last workday');
    }
  }

  int selectedButtonIndex = 0; // Track the selected button

  void onButtonPressed(int index) {
    setState(() {
      selectedButtonIndex = index; // Update the selected button index
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Stack(
          children: [
            Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: AssetImage('assets/images/bg.png'),
                  fit: BoxFit.cover,
                ),
              ),
            ),

            // Background Image

            Column(
              children: [
                const SizedBox(height: 50),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Builder(
                      builder: (context) => GestureDetector(
                        onTap: () {
                          Scaffold.of(context).openDrawer();
                        },
                        child: const Row(
                          children: [
                            Icon(
                              Icons.menu,
                              size: 30,
                              color: Colors.white,
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 10,
                    ),
                    GestureDetector(
                      onTap: () {
                        // Your action when the image is tapped
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => HomePage()),
                        );
                        // Add your logic here, such as navigating to a new screen or performing some action.
                      },
                      child: Image.asset(
                        'assets/logos/logo.png',
                        height: 26.87,
                        width: 218.25,
                      ),
                    )
                  ],
                ),
                const SizedBox(
                  height: 43.13,
                ),
                const Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 13.13,
                    ),
                    IconButton(
                      icon: const Icon(Icons.arrow_back),

                      onPressed: () {
                        // Handle right arrow button press
                      },
                      iconSize: 40, // Adjust the size of the button
                      color: Colors.white, // Adjust the color of the button
                    ),
                    SizedBox(
                      width: 40,
                    ),
                    Text(
                      'ONE STOP ODESSA',
                      style: TextStyle(
                        fontSize: 16,
                        color: Colors.white,
                      ),
                    ),
                    SizedBox(
                      width: 50,
                    ),
                    IconButton(
                      icon: const Icon(Icons.arrow_forward),
                      onPressed: () {
                        // Handle right arrow button press
                      },
                      iconSize: 40, // Adjust the size of the button
                      color: Colors.white, // Adjust the color of the button
                    ),
                  ],
                ),
                Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
                SizedBox(
                  height: 32,
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 70,
                    ),
                    TextButton(
                      onPressed: () => onButtonPressed(0),
                      child: const Text(
                        'ANALYTICS',
                        style: TextStyle(
                          color: Colors.white, // Set the text color to black
                        ),
                      ),
                    ),
                    SizedBox(
                      width: 65,
                    ),
                    TextButton(
                      onPressed: () => onButtonPressed(1),
                      child: const Text(
                        'REPORTS',
                        style: TextStyle(
                          color: Colors.white, // Set the text color to black
                        ),
                      ),
                    ),
                  ],
                ),
                SizedBox(
                  height: 12,
                ),
                Row(
                  children: [
                    SizedBox(
                      width: 30.5,
                    ),
                    Divider(
                      height: 1, // Set the height of the line
                      thickness: 1, // Set the thickness of the line
                      color: Colors.white, // Set the color of the line
                    ),
                  ],
                )
              ],
            ),

            if (selectedButtonIndex == 0) ...[
              // Display content for Button 1
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 30.5,
                right: 179.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 50,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: EdgeInsets.only(left: 10, top: 0),
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Expanded(
                                child: Padding(
                                  padding: EdgeInsets.only(left: 10),
                                  child: TextField(
                                    controller: dateController,
                                    decoration: InputDecoration(
                                      hintText: 'yyyy-mm-dd',
                                      border: InputBorder.none,
                                    ),
                                  ),
                                ),
                              ),
                              IconButton(
                                onPressed: () {
                                  showDatePicker(
                                    context: context,
                                    initialDate: DateTime.now(),
                                    firstDate: DateTime(2000),
                                    lastDate: DateTime(2030),
                                  ).then((selectedDate) {
                                    if (selectedDate != null) {
                                      setState(() {
                                        this.selectedDate = selectedDate;
                                        dateController.text = selectedDate
                                            .toString()
                                            .split(' ')[0];
                                      });
                                    }
                                  });
                                },
                                icon: Icon(Icons.calendar_today),
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      Center(
                        child: FutureBuilder(
                          future: fetchData(selectedDate, 1002),
                          builder: (context, snapshot) {
                            if (snapshot.connectionState ==
                                    ConnectionState.done &&
                                !snapshot.hasError) {
                              if (snapshot.data != null &&
                                  snapshot.data!['AnalyticsList'] != null) {
                                return SingleChildScrollView(
                                  child: Column(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      YourWidget(
                                        analyticsList:
                                            (snapshot.data!['AnalyticsList']
                                                    as List<dynamic>)
                                                .cast<Map<String, dynamic>>(),
                                      ),
                                    ],
                                  ),
                                );
                              } else {
                                return Center(
                                  child: Text('No data available'),
                                );
                              }
                            } else {
                              return Center(
                                child: CircularProgressIndicator(),
                              );
                            }
                          },
                        ),
                      ),
                    ],
                  ),
                ],
              ),
              // Add rows and columns specific to Button 1
            ] else if (selectedButtonIndex == 1) ...[
              // Display content for Button 2
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 180.5,
                right: 29.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 250,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Stack(
                          children: [
                            Column(
                              children: [
                                SizedBox(
                                  height: 30,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 35,
                                    ),
                                    Text(
                                      'BUSINESS INTELLIGENCE REPORT',
                                      style: TextStyle(
                                          fontWeight: FontWeight.bold,
                                          fontSize:
                                              13 // Set the text color to black
                                          ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 15,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 23,
                                    ),
                                    Container(
                                      width: 110,
                                      height: 35,
                                      decoration: BoxDecoration(
                                        color: Colors.white.withOpacity(1),
                                        borderRadius: BorderRadius.circular(5),
                                        border: Border.all(
                                          color: Colors
                                              .grey, // Set the border color to grey
                                          width: 1, // Set the border width
                                        ),
                                      ),
                                      child: Padding(
                                        padding:
                                            EdgeInsets.only(left: 0, top: 0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Expanded(
                                              child: Padding(
                                                padding:
                                                    EdgeInsets.only(left: 5),
                                                child: TextField(
                                                  style:
                                                      TextStyle(fontSize: 11),
                                                  controller: dateController,
                                                  decoration: InputDecoration(
                                                    hintText: 'From Date',
                                                    border: InputBorder.none,
                                                  ),
                                                ),
                                              ),
                                            ),
                                            IconButton(
                                              onPressed: () {
                                                showDatePicker(
                                                  context: context,
                                                  initialDate: DateTime.now(),
                                                  firstDate: DateTime(2000),
                                                  lastDate: DateTime(2030),
                                                ).then((selectedDate) {
                                                  if (selectedDate != null) {
                                                    setState(() {
                                                      this.selectedDate =
                                                          selectedDate;
                                                      dateController.text =
                                                          selectedDate
                                                              .toString()
                                                              .split(' ')[0];
                                                    });
                                                  }
                                                });
                                              },
                                              icon: Icon(
                                                Icons.calendar_today,
                                                size: 14.09,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                    SizedBox(
                                      width: 44,
                                    ),
                                    Container(
                                      width: 110,
                                      height: 35,
                                      decoration: BoxDecoration(
                                        color: Colors.white.withOpacity(1),
                                        borderRadius: BorderRadius.circular(5),
                                        border: Border.all(
                                          color: Colors
                                              .grey, // Set the border color to grey
                                          width: 1, // Set the border width
                                        ),
                                      ),
                                      child: Padding(
                                        padding:
                                            EdgeInsets.only(left: 0, top: 0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Expanded(
                                              child: Padding(
                                                padding:
                                                    EdgeInsets.only(left: 5),
                                                child: TextField(
                                                  style:
                                                      TextStyle(fontSize: 11),
                                                  controller: dateController,
                                                  decoration: InputDecoration(
                                                    hintText: 'To Date',
                                                    border: InputBorder.none,
                                                  ),
                                                ),
                                              ),
                                            ),
                                            IconButton(
                                              onPressed: () {
                                                showDatePicker(
                                                  context: context,
                                                  initialDate: DateTime.now(),
                                                  firstDate: DateTime(2000),
                                                  lastDate: DateTime(2030),
                                                ).then((selectedDate) {
                                                  if (selectedDate != null) {
                                                    setState(() {
                                                      this.selectedDate =
                                                          selectedDate;
                                                      dateController.text =
                                                          selectedDate
                                                              .toString()
                                                              .split(' ')[0];
                                                    });
                                                  }
                                                });
                                              },
                                              icon: Icon(
                                                Icons.calendar_today,
                                                size: 14.09,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 34,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 100,
                                    ),
                                    TextButton(
                                      onPressed: () {},
                                      style: ButtonStyle(
                                        shape: MaterialStateProperty.all<
                                            RoundedRectangleBorder>(
                                          RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25.0),
                                            side: BorderSide(
                                                color: Colors.blue,
                                                width:
                                                    2.0), // Adjust the radius as needed
                                          ),
                                        ),
                                        minimumSize: MaterialStateProperty.all(
                                            const Size(
                                                100, 35)), // Set the size here
                                      ),
                                      child: const Text('Email'),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 10,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 100,
                                    ),
                                    ElevatedButton(
                                      onPressed: () {
                                        downloadPdf(FromDate, ToDate);
                                      },
                                      style: ButtonStyle(
                                        shape: MaterialStateProperty.all<
                                            RoundedRectangleBorder>(
                                          RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25.0),
                                            // Adjust the radius as needed
                                          ),
                                        ),
                                        minimumSize: MaterialStateProperty.all(
                                            const Size(
                                                100, 35)), // Set the size here
                                      ),
                                      child: const Text('Download'),
                                    ),
                                  ],
                                ),
                              ],
                            ),
                            Positioned(
                              top: 69,
                              left: 150,
                              child: Text("-"),
                            )
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ],
            SizedBox(
              height: 20,
            ),
            // Your API Data Display (adjust as needed)
          ],
        ),
        bottomNavigationBar: BottomAppBar(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: [
              IconButton(
                icon: Image.asset(
                  'assets/logos/bx-cctv.png',
                  width: 19.93, // Adjust image width as needed
                  height: 19.67,
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CctvScreen()),
                  );
                  // Handle home button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/alarm.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const AlarmScreen()),
                  ); // Handle settings button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/development.jpg', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  // Handle settings button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/center-circle.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CenterScreen()),
                  );
                  // Handle search button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/hdtv.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => HdtvScreen()),
                  );
                  // Handle search button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/plus-square.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CenterScreen()),
                  );
                  // Handle search button press
                },
              ),
            ],
          ),
        ),
        drawer: Drawer(
          child: Column(
            children: [
              Container(
                color: const Color.fromARGB(
                    255, 120, 63, 59), // Background color for the custom header
                height: 230, // Height of the custom header
                child: const Stack(
                  children: [
                    // Positioned user avatar
                    Positioned(
                      top: 20,
                      left: 20,
                      child: CircleAvatar(
                        backgroundColor: Colors.white,
                        child: Icon(
                          Icons.person,
                          color: Colors.blue,
                          size: 50,
                        ),
                      ),
                    ),
                    // Positioned account name
                    Positioned(
                      top: 44,
                      left: 100,
                      right: 73,
                      child: Text(
                        "NAME              +91XXXXXXXXXX name@email.com",
                        style: TextStyle(
                          fontSize: 11,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 108,
                      left: 100,
                      right: 86,
                      child: Text(
                        "Address Line 1 Address Line 2 District/City State, Country Pincode",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 207,
                      left: 100,
                      child: Text(
                        "+91 1234512345",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    // Positioned account email
                  ],
                ),
              ),
              //
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("RESET PASSWORD"),
                onTap: () {
                  // Handle home item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ResetScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("CONTACT"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ContactScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                minLeadingWidth: 25,
                title: const Text("TERMS & CONDITIONS"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.pop(context); // Close the drawer
                },
              ),
            ],
          ),
        ),
      ),
    );
  }

  Future<void> downloadPdf(FromDate, ToDate) async {
    // Replace 'YOUR_PDF_API_URL' with your actual API endpoint
    final pdfApiUrl =
        'http://usmgmt.iviscloud.net:777/businessInterface/insights/getPdfReport?siteId=1003&startdate=$ToDate&enddate=$ToDate&calling_System_Detail=IVISUSA';

    try {
      final response = await http.get(Uri.parse(pdfApiUrl));

      if (response.statusCode == 200) {
        final documentDirectory = await getApplicationDocumentsDirectory();
        final file = File('${documentDirectory.path}/downloaded_file.pdf');

        await file.writeAsBytes(response.bodyBytes);

        print('PDF downloaded and saved to: ${file.path}');
      } else {
        throw Exception('Failed to download PDF');
      }
    } catch (e) {
      print('Error downloading PDF: $e');
    }
  }
}

@override
class YourWidget extends StatelessWidget {
  final List<Map<String, dynamic>> analyticsList;

  YourWidget({required this.analyticsList});
  Color getColorBasedOnCriteria(String type) {
    // Your logic to determine the color based on the 'type'
    // For example, let's say if type is 'A' use red, if 'B' use green, else use yellow
    if (type == 'Raise') {
      return Colors.green.withOpacity(1);
    } else if (type == 'Fall') {
      return Colors.red.withOpacity(1);
    } else {
      return Colors.yellow.withOpacity(1);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        SizedBox(height: 10),

        // Create a list of Container widgets for each item in analyticsList
        for (var analytics in analyticsList) ...[
          SizedBox(
            height: 10,
          ),

          // ignore: unnecessary_null_comparison
          if (analytics != null && analytics['service'] is String)
            SingleChildScrollView(
              child: Container(
                width: 300,
                height: 100,
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(1),
                  borderRadius: BorderRadius.circular(5),
                ),
                child: Padding(
                    padding: EdgeInsets.only(
                        top: 0, left: 0), // Adjust the left padding
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      children: [
                        SizedBox(
                          height: 14,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Text(
                              '${analytics['service']}',
                              style: const TextStyle(
                                fontSize: 13,
                                color: Colors.black,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Column(
                              children: [
                                SizedBox(
                                  height: 4,
                                ),
                                Text(
                                  '(Compare with prior period)',
                                  style: const TextStyle(
                                    fontSize: 9,
                                    color: Colors.grey,
                                  ),
                                )
                              ],
                            ),
                          ],
                        ),
                        SizedBox(
                          height: 8,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][0]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        '${analytics['analytics'][0]['type']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][0]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        '${analytics['analytics'][0]['count']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][1]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 5,
                                      ),
                                      Text(
                                        '${analytics['analytics'][1]['type']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][1]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${analytics['analytics'][1]['count']}",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][3]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        'QTR',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][3]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${analytics['analytics'][3]['count']}",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ],
                    )),
              ),
            ),
          // Add more widgets or modify the Container as needed
        ],
      ],
    );
  }
}

************************************************************************
if (listOfCamera.isNotEmpty)
                SingleChildScrollView(
                  child: Column(
                    children: [
                      const SizedBox(
                        height: 300,
                      ),
                      ...listOfCamera.map(
                        (e) {
                          // GetData();
                          return GestureDetector(
                            onTap: () {
                              Navigator.of(context).push(MaterialPageRoute(
                                  builder: (ctx) => BigScreen(
                                      httpUrl: e.httpUrl,
                                      cameraId: e.status,
                                      cameraName: e.name)));
                            },
                            // child: VideoPlayerScreen(
                            //     rtspLInk: e.rtspUrl,
                            //     status: e.status,
                            //     cameraName: e.name),
                            child: Expanded(
                                child: VisibilityDetector(
                              key: Key(e.name.toString()),
                              child: Padding(
                                padding: const EdgeInsets.all(8.0),
                                child: Container(
                                  height: 250,
                                  width: 300,
                                  decoration: ShapeDecoration(
                                    color: Colors.white,
                                    shape: RoundedRectangleBorder(
                                      borderRadius: BorderRadius.circular(20),
                                    ),
                                  ),
                                  child: Center(
                                      child: Column(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      if (visibilityScreenName == e.name)
                                        VideoPlayerScreen(
                                            httpUrl: e.httpUrl,
                                            status: e.status,
                                            cameraName: e.name),
                                      Text(e.name),
                                    ],
                                  )),
                                ),
                              ),
                              onVisibilityChanged: (visibilityInfo) {
                                setState(() {
                                  // Change the flag value of _isVisible
                                  // If it is greater than 0 means it is visible
                                  _isVisible =
                                      visibilityInfo.visibleFraction > 0;

                                  // It will show how much percentage the widget is visible
                                  var visiblePercentage =
                                      visibilityInfo.visibleFraction * 100;
                                  if (visibilityScreenName != e.name &&
                                      visiblePercentage == 100) {
                                    visibilityScreenName = e.name;

                                    print(visibilityScreenName);
                                  } else {
                                    print("Hello");
                                  }
                                  print(
                                      '${e.name} is ${visiblePercentage}% visible');
                                });
                              },
                            )),
                          );
                        },
                      )
                    ],
                  ),
                ),

              if (listOfCamera.isEmpty) const CircularProgressIndicator()

************************************************************
const Positioned(
                top: 250, // Adjust the position from the bottom
                left: 130.5,
                right: 129.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              const Positioned(
                top: 250, // Adjust the position from the bottom
                left: 130.5,
                right: 129.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Positioned(
                top: 272, // Adjust the position from the bottom
                left: 30,
                child: Column(
                  children: [
                    Container(
                      width: 300,
                      height: 50,
                      decoration: BoxDecoration(
                        color: Colors.white.withOpacity(1),
                        borderRadius: BorderRadius.circular(5),
                      ),
                      child: Padding(
                        padding: const EdgeInsets.only(
                            top: 0, left: 0), // Adjust the left padding
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            const SizedBox(
                                width:
                                    25), // Add spacing between text and image
                            const Text(
                              'Hours',
                              style: TextStyle(
                                fontSize: 13,
                                color: Colors.black,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            const SizedBox(
                                width:
                                    176), // Add spacing between text and next image
                            InkWell(
                              onTap: () {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                      builder: (context) => CenterScreen()),
                                );

                                // Add your desired action here
                              },
                              child: Image.asset(
                                'assets/logos/Rectangle.png',
                                height: 25,
                                width: 45,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      height: 10,
                    ),
                    Container(
                      width: 300,
                      decoration: BoxDecoration(
                        color: Colors.white.withOpacity(1),
                        borderRadius: BorderRadius.circular(5),
                      ),
                      child: Padding(
                        padding: const EdgeInsets.only(
                            top: 0, left: 0), // Adjust the left padding
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Column(
                              children: [
                                Column(
                                  children: [
                                    SizedBox(
                                      height: 23,
                                    ),
                                    Row(
                                      children: [
                                        SizedBox(
                                          width: 266,
                                        ),
                                        InkWell(
                                          onTap: () {
                                            Navigator.push(
                                              context,
                                              MaterialPageRoute(
                                                  builder: (context) =>
                                                      CenterScreen()),
                                            );
                                            // Add your desired action here
                                          },
                                          child: Image.asset(
                                            'assets/logos/plus-square.jpg',
                                            height: 13,
                                            width: 13,
                                          ),
                                        ),
                                      ],
                                    ),
                                    SizedBox(
                                      height: 22,
                                    ),
                                    // ignore: unused_local_variable
                                    for (String site in monitoringNames)
                                      SingleChildScrollView(
                                          child: Column(
                                        children: [
                                          Row(
                                            children: [
                                              SizedBox(
                                                width: 25,
                                              ),
                                              Text(
                                                site,

                                                style: TextStyle(
                                                  color: Colors.grey,
                                                  fontSize:
                                                      11, // Set the text color to black
                                                ), //#ABABAB
                                              ),
                                            ],
                                          ),
                                          SizedBox(
                                            height: 16,
                                          ),
                                          Divider(
                                            color: Colors.black,
                                            height: 1,
                                            thickness: 1,

                                            // Thickness of the divider
                                          ),
                                          SizedBox(
                                            height: 16,
                                          ),
                                        ],
                                      )),
                                  ],
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      height: 10,
                    ),
                  ],
                ),
              ),
****************************************************************
// main.
//status
Column(
                children: [
                  SizedBox(
                    height: 270,
                  ),
                  Row(
                    children: [
                      SizedBox(
                        width: 30,
                      ),
                      OutlinedButton(
                        onPressed: () {
                          setState(() {
                            selectedButtonIndex = 0;
                          });
                          // Add your button press logic here
                        },
                        style: OutlinedButton.styleFrom(
                          side: BorderSide(
                              color: Colors.white), // Specify the border color
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(
                                10.0), // Adjust border radius as needed
                          ),
                        ),
                        child: Text(
                          'Devices',
                          style: TextStyle(
                              color: Colors.white), // Specify text color
                        ),
                      ),
                      if (selectedButtonIndex == 0) ...[
                        Column(
                          children: [
                            SizedBox(
                              height: 16,
                            ),
                            Container(
                              width: 300,
                              height: 900,
                              decoration: BoxDecoration(
                                color: Colors.white.withOpacity(1),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    top: 0, left: 0), // Adjust the left padding
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.start,
                                  children: [
                                    Column(
                                      children: [
                                        SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          children: [
                                            SizedBox(
                                              width: 13,
                                            ),
                                            Text("Naveen"),
                                            SizedBox(width: 185)
                                          ],
                                        )
                                      ],
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ],
                        )
                      ] else if (selectedButtonIndex == 1)
                        ...[],
                      SizedBox(
                        width: 10,
                      ),
                      OutlinedButton(
                        onPressed: () {
                          // Add your button press logic here
                        },
                        style: OutlinedButton.styleFrom(
                          side: BorderSide(
                              color: Colors.white), // Specify the border color
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(
                                10.0), // Adjust border radius as needed
                          ),
                        ),
                        child: Text(
                          'Cameras',
                          style: TextStyle(
                              color: Colors.white), // Specify text color
                        ),
                      )
                    ],
                  )
                ],
              ),
************************************************************
 Column(
                              children: [
                                SizedBox(
                                  height: 23,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 266,
                                    ),
                                    InkWell(
                                      onTap: () {
                                        // Add your desired action here
                                      },
                                      child: Image.asset(
                                        'assets/logos/plus-square.jpg',
                                        height: 13,
                                        width: 13,
                                      ),
                                    ),
                                  ],
                                ),
                                SizedBox(
                                  height: 22,
                                ),
                                Row(
                                  children: [
                                    SizedBox(
                                      width: 25,
                                    ),
                                    Text(
                                      'Mon-Sun',
                                      style: TextStyle(
                                        color: Colors.grey,
                                        fontSize:
                                            11, // Set the text color to black
                                      ), //#ABABAB
                                    ),
                                    SizedBox(
                                      width: 153,
                                    ),
                                    Text(
                                      '12A-7A',
                                      style: TextStyle(
                                        color: Colors.grey,
                                        fontSize:
                                            11, // Set the text color to black
                                      ), //#ABABAB
                                    ),
                                  ],
                                )
                              ],
                            )
                          
*****************************************************
if (listOfCamera.isNotEmpty)
                const SizedBox(
                  height: 300,
                ),
              Column(
                children: [
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          setState(() {
                            if (startIndex >= 2) {
                              startIndex -= 2;
                              endIndex -= 2;
                            }
                            shouldReloadContainers = true;
                          });
                        },
                        child: Text('Back'),
                      ),
                      ElevatedButton(
                        onPressed: () {
                          setState(() {
                            if (endIndex < listOfCamera.length) {
                              startIndex += 2;
                              endIndex += 2;
                            }
                            shouldReloadContainers = true;
                          });
                        },
                        child: Text('Next'),
                      ),
                    ],
                  ),
                  ...listOfCamera.sublist(startIndex, endIndex).map(
                    (e) {
                      // GetData();
                      return GestureDetector(
                        onTap: () {
                          Navigator.of(context).push(MaterialPageRoute(
                              builder: (ctx) => BigScreen(
                                  rtspLInk: e.rtspUrl,
                                  cameraId: e.status,
                                  cameraName: e.name)));
                        },
                        child: VideoPlayerScreen(
                            rtspLInk: e.rtspUrl,
                            status: e.status,
                            cameraName: e.name),
                      );
                    },
                  )
                ],
              ),

              if (listOfCamera.isEmpty) const CircularProgressIndicator()

              
*********************************************************
import 'package:ivis_security/apis/analytics.dart';
import 'package:flutter/material.dart';
import 'package:ivis_security/alarm.dart';
import 'package:ivis_security/cctv.dart';
import 'package:ivis_security/center.dart';
import 'package:ivis_security/hdtv.dart';
import 'package:ivis_security/contact.dart';
import 'package:ivis_security/reset.dart';

// Import your API service file

void main() async {
  runApp(DevelopmentScreen());
}

class DevelopmentScreen extends StatefulWidget {
  const DevelopmentScreen({super.key});

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<DevelopmentScreen> {
  // Track the selected button
  late DateTime selectedDate;

  TextEditingController dateController = TextEditingController();

  @override
  void initState() {
    super.initState();
    dateController = TextEditingController();
    selectedDate = DateTime.now(); // Initialize selectedDate here
  }

  int selectedButtonIndex = 0; // Track the selected button

  void onButtonPressed(int index) {
    setState(() {
      selectedButtonIndex = index; // Update the selected button index
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Stack(
          children: [
            // Background Image
            Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: AssetImage('assets/images/bg.png'),
                  fit: BoxFit.cover,
                ),
              ),
            ),
            Column(
              children: [
                const SizedBox(height: 50),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Builder(
                      builder: (context) => GestureDetector(
                        onTap: () {
                          Scaffold.of(context).openDrawer();
                        },
                        child: const Row(
                          children: [
                            Icon(
                              Icons.menu,
                              size: 30,
                              color: Colors.white,
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 10,
                    ),
                    Image.asset(
                      'assets/logos/logo.png',
                      height: 26.87,
                      width: 218.25,
                    ),
                  ],
                ),
                const SizedBox(
                  height: 43.13,
                ),
                const Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ],
            ),
            const Positioned(
              top: 170, // Adjust the top position as needed
              left: 0.5, // Adjust the left position as needed
              right: 0.5, // Adjust the right position as needed
              child: Divider(
                height: 1, // Set the height of the line
                thickness: 1, // Set the thickness of the line
                color: Colors.white, // Set the color of the line
              ),
            ),
            const Positioned(
              top: 250, // Adjust the top position as needed
              left: 30.5, // Adjust the left position as needed
              right: 30.5, // Adjust the right position as needed
              child: Divider(
                height: 1, // Set the height of the line
                thickness: 1, // Set the thickness of the line
                color: Colors.white, // Set the color of the line
              ),
            ),
            Positioned(
              right: 30, // Adjust the position from the right
              top: 125, // Center vertically
              child: IconButton(
                icon: const Icon(Icons.arrow_forward),
                onPressed: () {
                  // Handle right arrow button press
                },
                iconSize: 40, // Adjust the size of the button
                color: Colors.white, // Adjust the color of the button
              ),
            ),
            Positioned(
              left: MediaQuery.of(context).size.width / 2 -
                  75, // Adjust the position from the left
              top: 135, // Center vertically
              child: const Text(
                'ONE STOP ODESSA',
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.white,
                ),
              ),
            ),
            Positioned(
              top: 202, // Adjust the position from the bottom
              left: 70, // Adjust the position from the left
              child: TextButton(
                onPressed: () => onButtonPressed(0),
                child: const Text(
                  'ANALYTICS',
                  style: TextStyle(
                    color: Colors.white, // Set the text color to black
                  ),
                ),
              ),
            ),
            Positioned(
              top: 202, // Adjust the position from the bottom
              left: 226, // Adjust the position from the left
              child: TextButton(
                onPressed: () => onButtonPressed(1),
                child: const Text(
                  'REPORTS',
                  style: TextStyle(
                    color: Colors.white, // Set the text color to black
                  ),
                ),
              ),
            ),
            if (selectedButtonIndex == 0) ...[
              // Display content for Button 1
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 30.5,
                right: 179.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  SingleChildScrollView(
                    child: Column(
                      children: [
                        const SizedBox(
                          height: 285,
                        ),
                        Container(
                          width: 300,
                          height: 50,
                          decoration: BoxDecoration(
                            color: Colors.white.withOpacity(1),
                            borderRadius: BorderRadius.circular(5),
                          ),
                          child: Padding(
                            padding: EdgeInsets.only(left: 10, top: 0),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsets.only(left: 10),
                                    child: TextField(
                                      controller: dateController,
                                      decoration: InputDecoration(
                                        hintText: 'yyyy-mm-dd',
                                        border: InputBorder.none,
                                      ),
                                    ),
                                  ),
                                ),
                                IconButton(
                                  onPressed: () {
                                    showDatePicker(
                                      context: context,
                                      initialDate: DateTime.now(),
                                      firstDate: DateTime(2000),
                                      lastDate: DateTime(2030),
                                    ).then((selectedDate) {
                                      if (selectedDate != null) {
                                        setState(() {
                                          this.selectedDate = selectedDate;
                                          dateController.text = selectedDate
                                              .toString()
                                              .split(' ')[0];
                                        });
                                      }
                                    });
                                  },
                                  icon: Icon(Icons.calendar_today),
                                ),
                              ],
                            ),
                          ),
                        ),
                        const SizedBox(
                          height: 10,
                        ),
                        Center(
                            child: FutureBuilder(
                          future: fetchData(selectedDate),
                          builder: (context, snapshot) {
                            if (snapshot.connectionState ==
                                    ConnectionState.done &&
                                !snapshot.hasError) {
                              // Check if snapshot.data is not null before accessing it
                              if (snapshot.data != null &&
                                  snapshot.data!['AnalyticsList'] != null) {
                                return Positioned(
                                  top: 50,
                                  left: 20,
                                  child: SingleChildScrollView(
                                    child: YourWidget(
                                      analyticsList:
                                          (snapshot.data!['AnalyticsList']
                                                  as List<dynamic>)
                                              .cast<Map<String, dynamic>>(),
                                    ),
                                  ),
                                );
                              } else {
                                return Center(
                                  child: Text('No data available'),
                                );
                              }
                            } else {
                              return Center(
                                child: CircularProgressIndicator(),
                              );
                            }
                          },
                        )),
                      ],
                    ),
                  ),
                ],
              ),

              // Add rows and columns specific to Button 1
            ] else if (selectedButtonIndex == 1) ...[
              // Display content for Button 2
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 180.5,
                right: 29.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 250,
                        color: Colors.white,
                      ),
                    ],
                  ),
                ],
              ),
            ],
            SizedBox(
              height: 20,
            ),
            // Your API Data Display (adjust as needed)
          ],
        ),
        bottomNavigationBar: BottomAppBar(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: [
              IconButton(
                icon: Image.asset(
                  'assets/logos/bx-cctv.png',
                  width: 19.93, // Adjust image width as needed
                  height: 19.67,
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CctvScreen()),
                  );
                  // Handle home button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/alarm.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const AlarmScreen()),
                  ); // Handle settings button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/development.jpg', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  // Handle settings button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/center-circle.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CenterScreen()),
                  );
                  // Handle search button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/hdtv.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => HdtvScreen()),
                  );
                  // Handle search button press
                },
              ),
              IconButton(
                icon: Image.asset(
                  'assets/logos/plus-square.png', // Replace with your image path
                  width: 19.93, // Adjust image width as needed
                  height: 19.67, // Adjust image height as needed
                ),
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => CenterScreen()),
                  );
                  // Handle search button press
                },
              ),
            ],
          ),
        ),
        drawer: Drawer(
          child: Column(
            children: [
              Container(
                color: const Color.fromARGB(
                    255, 120, 63, 59), // Background color for the custom header
                height: 230, // Height of the custom header
                child: const Stack(
                  children: [
                    // Positioned user avatar
                    Positioned(
                      top: 20,
                      left: 20,
                      child: CircleAvatar(
                        backgroundColor: Colors.white,
                        child: Icon(
                          Icons.person,
                          color: Colors.blue,
                          size: 50,
                        ),
                      ),
                    ),
                    // Positioned account name
                    Positioned(
                      top: 44,
                      left: 100,
                      right: 73,
                      child: Text(
                        "NAME              +91XXXXXXXXXX name@email.com",
                        style: TextStyle(
                          fontSize: 11,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 108,
                      left: 100,
                      right: 86,
                      child: Text(
                        "Address Line 1 Address Line 2 District/City State, Country Pincode",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 207,
                      left: 100,
                      child: Text(
                        "+91 1234512345",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    // Positioned account email
                  ],
                ),
              ),
              //
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("RESET PASSWORD"),
                onTap: () {
                  // Handle home item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ResetScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("CONTACT"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ContactScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                minLeadingWidth: 25,
                title: const Text("TERMS & CONDITIONS"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.pop(context); // Close the drawer
                },
              ),
            ],
          ),
        ),
      ),
    );
  }
}

@override
class YourWidget extends StatelessWidget {
  final List<Map<String, dynamic>> analyticsList;

  YourWidget({required this.analyticsList});
  Color getColorBasedOnCriteria(String type) {
    // Your logic to determine the color based on the 'type'
    // For example, let's say if type is 'A' use red, if 'B' use green, else use yellow
    if (type == 'Raise') {
      return Colors.red.withOpacity(1);
    } else if (type == 'Fall') {
      return Colors.green.withOpacity(1);
    } else {
      return Colors.yellow.withOpacity(1);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        SizedBox(height: 10),

        // Create a list of Container widgets for each item in analyticsList
        for (var analytics in analyticsList) ...[
          SizedBox(
            height: 10,
          ),

          if (analytics != null && analytics['service'] is String)
            SingleChildScrollView(
              child: Container(
                width: 300,
                height: 100,
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(1),
                  borderRadius: BorderRadius.circular(5),
                ),
                child: Padding(
                    padding: EdgeInsets.only(
                        top: 0, left: 0), // Adjust the left padding
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      children: [
                        SizedBox(
                          height: 14,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Text(
                              '${analytics['service']}',
                              style: const TextStyle(
                                fontSize: 13,
                                color: Colors.black,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Column(
                              children: [
                                SizedBox(
                                  height: 4,
                                ),
                                Text(
                                  '(Compare with prior period)',
                                  style: const TextStyle(
                                    fontSize: 9,
                                    color: Colors.grey,
                                  ),
                                )
                              ],
                            ),
                          ],
                        ),
                        SizedBox(
                          height: 8,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][0]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        '${analytics['analytics'][0]['type']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][0]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        '${analytics['analytics'][0]['count']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][1]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 5,
                                      ),
                                      Text(
                                        '${analytics['analytics'][1]['type']}',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][1]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${analytics['analytics'][1]['count']}",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: getColorBasedOnCriteria(
                                    analytics['analytics'][3]['status']),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        'QTR',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                      SizedBox(
                                        width: 3,
                                      ),
                                      Text(
                                        '(${analytics['analytics'][3]['percentage']}%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 10,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${analytics['analytics'][3]['count']}",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ],
                    )),
              ),
            ),
          // Add more widgets or modify the Container as needed
        ],
      ],
    );
  }
}





*****************************************************
Column(
                              children: [
                                SizedBox(
                                  height: 4,
                                ),
                                Text(
                                  '(Compare with prior period)',
                                  style: const TextStyle(
                                    fontSize: 9,
                                    color: Colors.grey,
                                  ),
                                )
                              ],
                            ),
                          ],
                        ),
                        SizedBox(
                          height: 8,
                        ),
                        Row(
                          children: [
                            SizedBox(
                              width: 18,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: Colors.red.withOpacity(1),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        'DAY (5%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        '72',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: Colors.green.withOpacity(1),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        'DAY (5%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "72",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            SizedBox(
                              width: 12,
                            ),
                            Container(
                              height: 50,
                              width: 80,
                              decoration: BoxDecoration(
                                color: Colors.yellow.withOpacity(1),
                                borderRadius: BorderRadius.circular(5),
                              ),
                              child: Column(
                                children: [
                                  SizedBox(
                                    height: 8,
                                  ),
                                  Row(
                                    children: [
                                      SizedBox(
                                        width: 13,
                                      ),
                                      Text(
                                        'DAY (5%)',
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        "72",
                                        style: TextStyle(
                                          color: Colors.white,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),


*******************************************************
import 'package:flutter/material.dart';
import 'package:ivis_security/alarm.dart';
import 'package:ivis_security/center.dart';
import 'package:ivis_security/hdtv.dart';
import 'package:ivis_security/request.dart';
import 'package:ivis_security/cctv.dart';
import 'package:ivis_security/contact.dart';
import 'package:ivis_security/reset.dart';
import 'package:ivis_security/analytics/analyticsList.dart';
import 'package:ivis_security/apis/analytics.dart';
import 'package:ivis_security/analytics/dataContainer.dart';

void main() {
  runApp(const DevelopmentScreen());
}

class DevelopmentScreen extends StatefulWidget {
  const DevelopmentScreen({super.key});

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<DevelopmentScreen> {
  
  int selectedButtonIndex = 0; // Track the selected button
  late DateTime selectedDate;

  TextEditingController dateController = TextEditingController();
  
  @override
  void main() async {
    try {
    Map<String, dynamic> apiData = await fetchData();

    if (apiData.containsKey('error')) {
      print('Error occurred: ${apiData['error']}');
    } else {
      // Extract and process the data related to service, count, and percentage
      List<Map<String, dynamic>> analyticsList = apiData['analyticsList'];

      for (var analytics in analyticsList) {
        String serviceName = analytics['service'];
        int count = analytics['count'];
        double percentage = analytics['percentage'];

        // Now you can use serviceName, count, and percentage as needed
        print('Service: $serviceName, Count: $count, Percentage: $percentage');
      }
    }
  } catch (error) {
    print('Error: $error');
  }
}

  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    throw UnimplementedError();
  }
}
  void onButtonPressed(int index) {
    setState(() {
      selectedButtonIndex = index; // Update the selected button index
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Stack(
          children: [
            Image.asset(
              'assets/images/bg.png',
              fit: BoxFit.cover,
              alignment: Alignment.center,
            ),
            Column(
              children: [
                const SizedBox(height: 50),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Builder(
                      builder: (context) => GestureDetector(
                        onTap: () {
                          Scaffold.of(context).openDrawer();
                        },
                        child: const Row(
                          children: [
                            Icon(
                              Icons.menu,
                              size: 30,
                              color: Colors.white,
                            ),
                          ],
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 10,
                    ),
                    Image.asset(
                      'assets/logos/logo.png',
                      height: 26.87,
                      width: 218.25,
                    ),
                  ],
                ),
                const SizedBox(
                  height: 43.13,
                ),
                const Divider(
                  height: 1, // Set the height of the line
                  thickness: 1, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ],
            ),
            const Positioned(
              top: 170, // Adjust the top position as needed
              left: 0.5, // Adjust the left position as needed
              right: 0.5, // Adjust the right position as needed
              child: Divider(
                height: 1, // Set the height of the line
                thickness: 1, // Set the thickness of the line
                color: Colors.white, // Set the color of the line
              ),
            ),
            const Positioned(
              top: 250, // Adjust the top position as needed
              left: 30.5, // Adjust the left position as needed
              right: 30.5, // Adjust the right position as needed
              child: Divider(
                height: 1, // Set the height of the line
                thickness: 1, // Set the thickness of the line
                color: Colors.white, // Set the color of the line
              ),
            ),
            Positioned(
              right: 30, // Adjust the position from the right
              top: 125, // Center vertically
              child: IconButton(
                icon: const Icon(Icons.arrow_forward),
                onPressed: () {
                  // Handle right arrow button press
                },
                iconSize: 40, // Adjust the size of the button
                color: Colors.white, // Adjust the color of the button
              ),
            ),
            Positioned(
              left: MediaQuery.of(context).size.width / 2 -
                  75, // Adjust the position from the left
              top: 135, // Center vertically
              child: const Text(
                'ONE STOP ODESSA',
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.white,
                ),
              ),
            ),
            Positioned(
              top: 202, // Adjust the position from the bottom
              left: 70, // Adjust the position from the left
              child: TextButton(
                onPressed: () => onButtonPressed(0),
                child: const Text(
                  'ANALYTICS',
                  style: TextStyle(
                    color: Colors.white, // Set the text color to black
                  ),
                ),
              ),
            ),
            Positioned(
              top: 202, // Adjust the position from the bottom
              left: 226, // Adjust the position from the left
              child: TextButton(
                onPressed: () => onButtonPressed(1),
                child: const Text(
                  'REPORTS',
                  style: TextStyle(
                    color: Colors.white, // Set the text color to black
                  ),
                ),
              ),
            ),
            if (selectedButtonIndex == 0) ...[
              // Display content for Button 1
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 30.5,
                right: 179.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 50,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: EdgeInsets.only(left: 10, top: 0),
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Expanded(
                                child: Padding(
                                  padding: EdgeInsets.only(left: 10),
                                  child: TextField(
                                    controller: dateController,
                                    decoration: InputDecoration(
                                      hintText: 'yyyy-mm-dd',
                                      border: InputBorder.none,
                                    ),
                                  ),
                                ),
                              ),
                              IconButton(
                                onPressed: () {
                                  showDatePicker(
                                    context: context,
                                    initialDate: DateTime.now(),
                                    firstDate: DateTime(2000),
                                    lastDate: DateTime(2030),
                                  ).then((selectedDate) {
                                    if (selectedDate != null) {
                                      setState(() {
                                        this.selectedDate = selectedDate;
                                        dateController.text = selectedDate
                                            .toString()
                                            .split(' ')[0];
                                      });
                                    }
                                  });
                                },
                                icon: Icon(Icons.calendar_today),
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      for (String name in siteNames)
                        GestureDetector(
                          onTap: () {
                            // Navigate to another Dart file
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (context) =>
                                      const DevelopmentScreen()),
                            );
                          },
                          child: Container(
                            width: 300,
                            height: 60,
                            padding: const EdgeInsets.all(8.0),
                            margin: const EdgeInsets.only(bottom: 8.0),
                            color: Colors.white,
                            alignment: Alignment.center,
                            child: Text(name),
                          ),
                        ),
                                          ],
                  ),
                ],
              ),

              // Add rows and columns specific to Button 1
            ] else if (selectedButtonIndex == 1) ...[
              // Display content for Button 2
              const Positioned(
                top: 253, // Adjust the position from the bottom
                left: 180.5,
                right: 29.5,
                child: Divider(
                  height: 1, // Set the height of the line
                  thickness: 6, // Set the thickness of the line
                  color: Colors.white, // Set the color of the line
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [
                      const SizedBox(
                        height: 285,
                      ),
                      Container(
                        width: 300,
                        height: 250,
                        color: Colors.white,
                      ),
                    ],
                  ),
                ],
              ),
            ],
            Positioned(
              bottom: 0, // Adjust the position from the bottom
              left: 0,
              right: 0,
              child: Column(
                children: [
                  Container(
                    width: double.infinity,
                    height: 65,
                    decoration: BoxDecoration(
                      color: Colors.white.withOpacity(1),
                    ),
                    child: Padding(
                      padding: const EdgeInsets.only(
                          top: 0, left: 0), // Adjust the left padding
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        children: [
                          InkWell(
                            onTap: () {
                              // Handle the button press event here
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => const CctvScreen()),
                              );
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  top: 0, left: 0), // Adjust the left padding
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Image.asset(
                                    'assets/logos/bx-cctv.png', // Replace with your image path
                                    width:
                                        19.93, // Adjust image width as needed
                                    height:
                                        19.67, // Adjust image height as needed
                                  ), // Add spacing between text and image
                                ],
                              ),
                            ),
                          ),

                          InkWell(
                            onTap: () {
                              // Handle the button press event here
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => const AlarmScreen()),
                              );
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  top: 0, left: 0), // Adjust the left padding
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Image.asset(
                                    'assets/logos/alarm.png', // Replace with your image path
                                    width:
                                        19.93, // Adjust image width as needed
                                    height:
                                        19.67, // Adjust image height as needed
                                  ), // Add spacing between text and image
                                ],
                              ),
                            ),
                          ),
                          InkWell(
                            onTap: () {
                              // Handle the button press event here
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  top: 0, left: 0), // Adjust the left padding
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Image.asset(
                                    'assets/logos/development.jpg', // Replace with your image path
                                    width:
                                        19.93, // Adjust image width as needed
                                    height:
                                        19.67, // Adjust image height as needed
                                  ), // Add spacing between text and image
                                ],
                              ),
                            ),
                          ),
                          InkWell(
                            onTap: () {
                              // Handle the button press event here
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => const CenterScreen()),
                              );
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  top: 0, left: 0), // Adjust the left padding
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Image.asset(
                                    'assets/logos/center-circle.jpg', // Replace with your image path
                                    width:
                                        19.93, // Adjust image width as needed
                                    height:
                                        19.67, // Adjust image height as needed
                                  ), // Add spacing between text and image
                                ],
                              ),
                            ),
                          ),
                          InkWell(
                            onTap: () {
                              // Handle the button press event here
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => const HdtvScreen()),
                              );
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  top: 0, left: 0), // Adjust the left padding
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Image.asset(
                                    'assets/logos/hdtv.png', // Replace with your image path
                                    width:
                                        19.93, // Adjust image width as needed
                                    height:
                                        19.67, // Adjust image height as needed
                                  ), // Add spacing between text and image
                                ],
                              ),
                            ),
                          ),
                          InkWell(
                            onTap: () {
                              // Handle the button press event here
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) =>
                                        const RequestScreen()),
                              );
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  top: 0, left: 0), // Adjust the left padding
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Image.asset(
                                    'assets/logos/plus-square.png', // Replace with your image path
                                    width:
                                        19.93, // Adjust image width as needed
                                    height:
                                        19.67, // Adjust image height as needed
                                  ), // Add spacing between text and image
                                ],
                              ),
                            ),
                          ), // Positioned widget at the top-left corner
                        ],
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
        drawer: Drawer(
          child: Column(
            children: [
              Container(
                color: const Color.fromARGB(
                    255, 120, 63, 59), // Background color for the custom header
                height: 230, // Height of the custom header
                child: const Stack(
                  children: [
                    // Positioned user avatar
                    Positioned(
                      top: 20,
                      left: 20,
                      child: CircleAvatar(
                        backgroundColor: Colors.white,
                        child: Icon(
                          Icons.person,
                          color: Colors.blue,
                          size: 50,
                        ),
                      ),
                    ),
                    // Positioned account name
                    Positioned(
                      top: 44,
                      left: 100,
                      right: 73,
                      child: Text(
                        "NAME              +91XXXXXXXXXX name@email.com",
                        style: TextStyle(
                          fontSize: 11,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 108,
                      left: 100,
                      right: 86,
                      child: Text(
                        "Address Line 1 Address Line 2 District/City State, Country Pincode",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    Positioned(
                      top: 207,
                      left: 100,
                      child: Text(
                        "+91 1234512345",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    // Positioned account email
                  ],
                ),
              ),
              //
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("RESET PASSWORD"),
                onTap: () {
                  // Handle home item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ResetScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                title: const Text("CONTACT"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => const ContactScreen()),
                  ); // Close the drawer
                },
              ),
              const SizedBox(
                height: 25,
              ),
              ListTile(
                minLeadingWidth: 25,
                title: const Text("TERMS & CONDITIONS"),
                onTap: () {
                  // Handle settings item tap
                  Navigator.pop(context); // Close the drawer
                },
              ),
            ],
          ),
        ),
      ),
    );
    //return Scaffold(

    //);
  }
}

Container(
      width: 300,
      height: 100,
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(1),
        borderRadius: BorderRadius.circular(5),
      ),
      child: Padding(
        padding: EdgeInsets.only(top: 0, left: 0), // Adjust the left padding
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
        
            SizedBox(
              height: 14,
            ),
            Row(
              children: [
                SizedBox(
                  width: 18,
                ),
                Text(
                  "$service",
                  style: const TextStyle(
                    fontSize: 13,
                    color: Colors.black,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(
                  width: 5,
                ),
                Column(
                  children: [
                    SizedBox(
                      height: 4,
                    ),
                    Text(
                      '(Compare with prior period)',
                      style: const TextStyle(
                        fontSize: 9,
                        color: Colors.grey,
                      ),
                    )
                  ],
                ),
              ],
            ),
            SizedBox(
              height: 8,
            ),
            Row(
              children: [
                SizedBox(
                  width: 18,
                ),
                Container(
                  height: 50,
                  width: 80,
                  decoration: BoxDecoration(
                    color: Colors.red.withOpacity(1),
                    borderRadius: BorderRadius.circular(5),
                  ),
                  child: Column(
                    children: [
                      SizedBox(
                        height: 8,
                      ),
                      Row(
                        children: [
                          SizedBox(
                            width: 13,
                          ),
                          Text(
                            'DAY (5%)',
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                      SizedBox(
                        height: 5,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            '$serviceId',
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
                SizedBox(
                  width: 12,
                ),
                Container(
                  height: 50,
                  width: 80,
                  decoration: BoxDecoration(
                    color: Colors.green.withOpacity(1),
                    borderRadius: BorderRadius.circular(5),
                  ),
                  child: Column(
                    children: [
                      SizedBox(
                        height: 8,
                      ),
                      Row(
                        children: [
                          SizedBox(
                            width: 13,
                          ),
                          Text(
                            'DAY (5%)',
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                      SizedBox(
                        height: 5,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            "$serviceId",
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
                SizedBox(
                  width: 12,
                ),
                Container(
                  height: 50,
                  width: 80,
                  decoration: BoxDecoration(
                    color: Colors.yellow.withOpacity(1),
                    borderRadius: BorderRadius.circular(5),
                  ),
                  child: Column(
                    children: [
                      SizedBox(
                        height: 8,
                      ),
                      Row(
                        children: [
                          SizedBox(
                            width: 13,
                          ),
                          Text(
                            'DAY (5%)',
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                      SizedBox(
                        height: 5,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            "$serviceId",
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
// display_strings.dart

import 'package:flutter/material.dart';
import 'package:ivis_security/apis/Bussiness_int_api.dart'; // Import the file where fetchData is defined

class DisplayStrings extends StatefulWidget {
  @override
  _DisplayStringsState createState() => _DisplayStringsState();
}

class _DisplayStringsState extends State<DisplayStrings> {
  List<String> strings = [];

  @override
  void initState() {
    super.initState();
    fetchSiteNames().then((data) {
      setState(() {
        strings = data;
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Display Strings'),
      ),
      body: Column(
        children: [
          Text('Number of Strings: ${strings.length}'),
          SizedBox(height: 10),
          for (String str in strings)
            Container(
              padding: EdgeInsets.all(10),
              margin: EdgeInsets.all(5),
              decoration: BoxDecoration(
                border: Border.all(),
                borderRadius: BorderRadius.circular(10),
              ),
              child: Text(str),
            ),
        ],
      ),
    );
  }
  
  fetchSiteNames() {}
}

void main() {
  runApp(MaterialApp(
    home: DisplayStrings(),
  ));
}




Container(
                        width: 300,
                        height: 60,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.only(
                              top: 0, left: 0), // Adjust the left padding
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              const SizedBox(width: 15),
                              Image.asset(
                                'assets/logos/eye.jpg', // Replace with your image path
                                width: 19.7, // Adjust image width as needed
                                height: 13.13, // Adjust image height as needed
                              ),
                              const SizedBox(
                                  width:
                                      10.3), // Add spacing between text and image
                              const Text(
                                'Alpha Omega Contract Sales ….',
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.black,
                                ),
                              ),
                              const SizedBox(
                                  width:
                                      41), // Add spacing between text and next image
                              Image.asset(
                                'assets/logos/arrow.jpg', // Replace with your image path
                                width: 7.04, // Adjust image width as needed
                                height: 13, // Adjust image height as needed
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      InkWell(
                        onTap: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => const OneStopScreen()),
                          );
                        },
                        child: Container(
                          width: 300,
                          height: 60,
                          decoration: BoxDecoration(
                            color: Colors.white.withOpacity(1),
                            borderRadius: BorderRadius.circular(5),
                          ),
                          child: Padding(
                            padding: const EdgeInsets.only(
                                top: 0, left: 0), // Adjust the left padding
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              children: [
                                const SizedBox(width: 15),
                                Image.asset(
                                  'assets/logos/eye.jpg', // Replace with your image path
                                  width: 19.7, // Adjust image width as needed
                                  height:
                                      13.13, // Adjust image height as needed
                                ),
                                const SizedBox(
                                    width:
                                        10.3), // Add spacing between text and image

                                const Text(
                                  'One Stop Odessa',
                                  style: TextStyle(
                                    color: Colors.black,
                                  ),
                                ),

                                const SizedBox(
                                    width:
                                        95), // Add spacing between text and next image
                                Image.asset(
                                  'assets/logos/arrow.jpg', // Replace with your image path
                                  width: 7.04, // Adjust image width as needed
                                  height: 13, // Adjust image height as needed
                                ),
                              ],
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      Container(
                        width: 300,
                        height: 60,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.only(
                              top: 0, left: 0), // Adjust the left padding
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              const SizedBox(width: 15),
                              Image.asset(
                                'assets/logos/eye.jpg', // Replace with your image path
                                width: 19.7, // Adjust image width as needed
                                height: 13.13, // Adjust image height as needed
                              ),
                              const SizedBox(
                                  width:
                                      10.3), // Add spacing between text and image
                              const Text(
                                'ALS Grocery Midland',
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.black,
                                ),
                              ),
                              const SizedBox(
                                  width:
                                      103), // Add spacing between text and next image
                              Image.asset(
                                'assets/logos/arrow.jpg', // Replace with your image path
                                width: 7.04, // Adjust image width as needed
                                height: 13, // Adjust image height as needed
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      Container(
                        width: 300,
                        height: 60,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.only(
                              top: 0, left: 0), // Adjust the left padding
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              const SizedBox(width: 15),
                              Image.asset(
                                'assets/logos/eye.jpg', // Replace with your image path
                                width: 19.7, // Adjust image width as needed
                                height: 13.13, // Adjust image height as needed
                              ),
                              const SizedBox(
                                  width:
                                      10.3), // Add spacing between text and image
                              const Text(
                                'ALS Grocery Midland',
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.black,
                                ),
                              ),
                              const SizedBox(
                                  width:
                                      99), // Add spacing between text and next image
                              Image.asset(
                                'assets/logos/arrow.jpg', // Replace with your image path
                                width: 7.04, // Adjust image width as needed
                                height: 13, // Adjust image height as needed
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      Container(
                        width: 300,
                        height: 60,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.only(
                              top: 0, left: 0), // Adjust the left padding
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              const SizedBox(width: 15),
                              Image.asset(
                                'assets/logos/eye.jpg', // Replace with your image path
                                width: 19.7, // Adjust image width as needed
                                height: 13.13, // Adjust image height as needed
                              ),
                              const SizedBox(
                                  width:
                                      10.3), // Add spacing between text and image
                              const Text(
                                'Petro Mechanical Services Odessa',
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.black,
                                ),
                              ),
                              const SizedBox(
                                  width:
                                      22), // Add spacing between text and next image
                              Image.asset(
                                'assets/logos/arrow.jpg', // Replace with your image path
                                width: 7.04, // Adjust image width as needed
                                height: 13, // Adjust image height as needed
                              ),
                            ],
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      Container(
                        width: 300,
                        height: 60,
                        decoration: BoxDecoration(
                          color: Colors.white.withOpacity(1),
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.only(
                              top: 0, left: 0), // Adjust the left padding
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              const SizedBox(width: 15),
                              Image.asset(
                                'assets/logos/eye.jpg', // Replace with your image path
                                width: 19.7, // Adjust image width as needed
                                height: 13.13, // Adjust image height as needed
                              ),
                              const SizedBox(
                                  width:
                                      10.3), // Add spacing between text and image
                              const Text(
                                'One Stop Coahoma',
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.black,
                                ),
                              ),
                              const SizedBox(
                                  width:
                                      111), // Add spacing between text and next image
                              Image.asset(
                                'assets/logos/arrow.jpg', // Replace with your image path
                                width: 7.04, // Adjust image width as needed
                                height: 13, // Adjust image height as needed
                              ),
                            ],
                          ),
                        ),
                      ),




                      const Column(
                    children: [
                      SizedBox(
                        height: 20,
                      ),
                      Row(
                        children: [
                          SizedBox(
                            width: 1,
                          ),
                          Divider(
                            height: 1, // Set the height of the line
                            thickness: 6, // Set the thickness of the line
                            color: Colors.white, // Set the color of the line
                          ),
                        ],
                      ),
                    ],
                  ),

                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Column(
                        children: [
                          const SizedBox(
                            height: 20,
                          ),
                          Container(
                            width: 300,
                            height: 200,
                            decoration: BoxDecoration(
                              color: Colors.white.withOpacity(1),
                              borderRadius: BorderRadius.circular(5),
                            ),
                            child: const Stack(
                              children: [
                                // Positioned widget at the top-left corner
                                Positioned(
                                  top: 10,
                                  left: 25,
                                  child: Text(
                                    'Front Dining Room',
                                    style: TextStyle(
                                      fontSize: 13,
                                      color: Colors.black,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ),
                                Positioned(
                                  top: 13,
                                  left: 208,
                                  child: Text(
                                    'CONNECTED',
                                    style: TextStyle(
                                      fontSize: 9,
                                      color: Colors.green,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ),
                                Positioned(
                                  top: 13,
                                  left: 208,
                                  child: Text(
                                    'CONNECTED',
                                    style: TextStyle(
                                      fontSize: 9,
                                      color: Colors.green,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                          const SizedBox(
                            height: 10,
                          ),
                          Container(
                            width: 300,
                            height: 200,
                            decoration: BoxDecoration(
                              color: Colors.white.withOpacity(1),
                              borderRadius: BorderRadius.circular(5),
                            ),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment
                                  .start, // Align children horizontally to the start
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Container(
                                  height: 10,
                                ),
                                const SizedBox(
                                  height: 20,
                                  width: 25,
                                ),
                                // Positioned widget at the top-left corner
                                const Text(
                                  'Bar View #1',
                                  style: TextStyle(
                                    fontSize: 13,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),
                                const SizedBox(
                                  width: 67,
                                ),
                                Image.asset(
                                  'assets/logos/eye.jpg', // Replace with your image path
                                  width: 14.3, // Adjust image width as needed
                                  height: 9.54, // Adjust image height as needed
                                ),
                              ],
                            ),
                          ),
                          const SizedBox(
                            height: 10,
                          ),
                          Container(
                            width: 300,
                            height: 200,
                            decoration: BoxDecoration(
                              color: Colors.white.withOpacity(1),
                              borderRadius: BorderRadius.circular(5),
                            ),
                            child: const Stack(
                              children: [
                                // Positioned widget at the top-left corner
                                Positioned(
                                  top: 10,
                                  left: 25,
                                  child: Text(
                                    'Backdoor',
                                    style: TextStyle(
                                      fontSize: 13,
                                      color: Colors.black,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ),
                                Positioned(
                                  top: 13,
                                  left: 208,
                                  child: Text(
                                    'CONNECTED',
                                    style: TextStyle(
                                      fontSize: 9,
                                      color: Colors.green,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ),
                                Positioned(
                                  top: 13,
                                  left: 208,
                                  child: Text(
                                    'CONNECTED',
                                    style: TextStyle(
                                      fontSize: 9,
                                      color: Colors.green,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),